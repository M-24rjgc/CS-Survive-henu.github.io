name: Azure Static Web Apps CI/CD

# 修复说明：
# 1. 添加了 Node.js 设置和依赖安装步骤
# 2. 添加了 VitePress 构建步骤  
# 3. 配置了正确的输出目录 docs/.vitepress/dist
# 4. 与现有的 GitHub Pages 部署并行工作

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      
      - name: Install dependencies
        run: |
          echo "🔧 Installing dependencies..."
          if [ -f package-lock.json ]; then
            npm ci --prefer-offline --no-audit
          else
            npm install --prefer-offline
          fi
          echo "📋 Installed packages:"
          npm list --depth=0
      
      - name: Build VitePress site
        run: |
          echo "🏗️ Building VitePress site..."
          npm run build
          
          echo "📁 Build output:"
          ls -la docs/.vitepress/dist/
          
          # 创建 .nojekyll 文件以禁用 Jekyll 处理
          touch docs/.vitepress/dist/.nojekyll
          echo "✅ Created .nojekyll file"
          
          # 复制 favicon 到根目录
          if [ -f "favicon.ico" ]; then
            cp favicon.ico docs/.vitepress/dist/
            echo "✅ Copied favicon.ico"
          fi
          
          echo "🎉 Build completed successfully!"
      
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROUD_MUSHROOM_0DA409900 }}
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "docs/.vitepress/dist" # Built app content directory - VitePress build output
          github_id_token: ${{ steps.idtoken.outputs.result }}
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
